version: '3.1'
services:
  order-server:
    container_name: order-server
    build:
      dockerfile: order-server/Dockerfile
    image: order-server:latest
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: deploy
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - kafka_network

  payment-server:
    container_name: payment-server
    build:
      dockerfile: payment-server/Dockerfile
    image: payment-server:latest
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVER: kafka:9092
      SPRING_PROFILES_ACTIVE: deploy
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - order-server
    networks:
      - kafka_network

  delivery-server:
    container_name: delivery-server
    build:
      dockerfile: delivery-server/Dockerfile
    image: delivery-server:latest
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVER: kafka:9092
      SPRING_PROFILES_ACTIVE: deploy
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - payment-server
    networks:
      - kafka_network


  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - kafka_network


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    restart: always
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge


